# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main

variables:
  azureRegistry: "AzureContainerRegistry"
  awsRegion: "eu-west-2"
  imageTag: "latest"
  aksResourceGroup: "KubeGroup"
  k8sNamespace: "default"
  azureSubscription: "AWS"
  ecrRepository: "testazurecontaineregistry"

pool:
  vmImage: ubuntu-latest

jobs:
  - job: BuildAndPush
    displayName: "Build and Push Docker Image to ACR"
    pool:
      name: default

    steps:
      - task: Docker@2
        inputs:
          command: "buildAndPush"
          containerRegistry: "$(azureRegistry)"
          repository: "$(azureRegistry)/$(ecrRepository)"
          dockerfile: "$(Build.SourcesDirectory)/api/Dockerfile"
          tags: "$(imageTag)"
        displayName: "Build and Push API Docker Image to ACR"

      - task: Docker@2
        inputs:
          command: "buildAndPush"
          containerRegistry: "$(azureRegistry)"
          repository: "$(azureRegistry)/$(ecrRepository)"
          dockerfile: "$(Build.SourcesDirectory)/web/Dockerfile"
          tags: "$(imageTag)"
        displayName: "Build and Push Web Docker Image to ACR"

  - job: DeployToEKS
    displayName: "Deploy to EKS"
    pool:
      name: default
    dependsOn: BuildAndPush

    steps:
      - task: Kubernetes@1
        inputs:
          connectionType: "Kubernetes Service Connection"
          kubernetesServiceEndpoint: "azure-eks"
          azureResourceGroup: "$(aksResourceGroup)"
          kubernetesCluster: "$(aksClusterName)"
          namespace: "$(k8sNamespace)"
          command: "apply"
          useConfigurationFile: true
          configuration: "$(Build.SourcesDirectory)/deployment.yaml"
        displayName: "Deploy to EKS"

      - task: AWSCLI@1
        inputs:
          awsCredentials: "AWS"
          regionName: "$(awsRegion)"
          awsCommand: "aws s3 ls"
        displayName: "Configure AWS Credentials"

      - script: |
          aws eks update-kubeconfig --region $(awsRegion) --name $(eksClusterName)
          kubectl set image deployment/$(deploymentName) $(containerName)=$(azureRegistry)/$(ecrRepository):$(imageTag) --namespace $(k8sNamespace)
        displayName: "Update Kubernetes Deployment"
